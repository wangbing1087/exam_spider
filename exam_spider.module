<?php

/**
 * @file
 * Exam spider module file.
 */

/**
 * Define Exam variable for Exam title and Path.
 */
define('EXAM_SPIDER_EXAM_URL', 'quizspider');
define('EXAM_SPIDER_EXAM_TITLE', 'Quiz');

/**
 *  Hook_perm() for Exam Spider permissions.
 */
function exam_spider_permission() {
  return array(
    'exam spider dashboard' => array(
      'title'       => t("Use exam spider Dashboard"),
      'description' => t('Allows a user to access the <a href="@url">Exam Spider Dashboard</a>.', array('@url' => url('admin/structure/' . EXAM_SPIDER_EXAM_URL))),
    ),
    'exam spider user'      => array(
      'title'       => t("Use exam spider user"),
      'description' => t('Allows a user to access the exam start.'),
    ),
  );
}

/**
 * Hook_menu function().
 */
function exam_spider_menu() {
  $exam_base_user = array(
    'file'             => 'includes/exams.inc',
    'access arguments' => array('exam spider user'),
  );
  $exam_base = array(
    'file'             => 'includes/exams.inc',
    'access arguments' => array('exam spider dashboard'),
  );
  $question_base = array(
    'file'             => 'includes/questions.inc',
    'access arguments' => array('exam spider dashboard'),
  );
  $items['admin/structure/' . EXAM_SPIDER_EXAM_URL] = array(
    'title'         => EXAM_SPIDER_EXAM_TITLE . ' Spider',
    'page callback' => 'exam_spider_dashboard',
  ) + $exam_base;
  $items['admin/structure/' . EXAM_SPIDER_EXAM_URL . '/dashboard'] = array(
    'title'         => 'Dashboard',
    'page callback' => 'exam_spider_dashboard',
    'type'          => MENU_DEFAULT_LOCAL_TASK,
    'weight'        => 1,
  ) + $exam_base;
  $items['admin/structure/' . EXAM_SPIDER_EXAM_URL . '/add'] = array(
    'title'          => 'Create ' . EXAM_SPIDER_EXAM_TITLE,
    'page callback'  => 'drupal_get_form',
    'page arguments' => array('exam_spider_add_exam'),
    'type'           => MENU_LOCAL_TASK,
    'weight'         => 2,
  ) + $exam_base;
  $items['admin/structure/' . EXAM_SPIDER_EXAM_URL . '/%/edit'] = array(
    'title'          => 'Edit ' . EXAM_SPIDER_EXAM_TITLE,
    'page callback'  => 'drupal_get_form',
    'page arguments' => array('exam_spider_edit_exam', 3),
    'type'           => MENU_CALLBACK,
  ) + $exam_base;
  $items['admin/structure/' . EXAM_SPIDER_EXAM_URL . '/%/delete'] = array(
    'title'          => 'Delete ' . EXAM_SPIDER_EXAM_TITLE,
    'page callback'  => 'drupal_get_form',
    'page arguments' => array('exam_spider_exam_delete_confirm', 3),
    'type'           => MENU_CALLBACK,
  ) + $exam_base;
  $items[EXAM_SPIDER_EXAM_URL . '/start'] = array(
    'title'         => 'Start ' . EXAM_SPIDER_EXAM_TITLE,
    'page callback' => 'exam_spider_exam_start',
    'type'          => MENU_CALLBACK,
  ) + $exam_base_user;
  $items[EXAM_SPIDER_EXAM_URL . '/%/continue'] = array(
    'title'          => 'Continue ' . EXAM_SPIDER_EXAM_TITLE,
    'page callback'  => 'drupal_get_form',
    'page arguments' => array('exam_spider_exam_continue', 1),
    'type'           => MENU_CALLBACK,
  ) + $exam_base_user;
  $items['admin/structure/' . EXAM_SPIDER_EXAM_URL . '/results'] = array(
    'title'         => EXAM_SPIDER_EXAM_TITLE . ' Results',
    'page callback' => 'exam_spider_exam_results',
    'type'          => MENU_LOCAL_TASK,
    'weight'        => 3,
  ) + $exam_base;
  $items['admin/structure/question/add_question/%'] = array(
    'title'          => 'Add questions to ' . EXAM_SPIDER_EXAM_TITLE,
    'page callback'  => 'drupal_get_form',
    'page arguments' => array('exam_spider_add_question', 4),
    'type'           => MENU_LOCAL_TASK,
  ) + $question_base;
  $items['admin/structure/question/%/edit'] = array(
    'title'          => 'Edit Question',
    'page callback'  => 'drupal_get_form',
    'page arguments' => array('exam_spider_edit_question', 3),
    'type'           => MENU_CALLBACK,
  ) + $question_base;
  $items['admin/structure/question/%/delete'] = array(
    'title'          => 'Delete Question',
    'page callback'  => 'drupal_get_form',
    'page arguments' => array('exam_spider_question_delete_confirm', 3),
    'type'           => MENU_CALLBACK,
  ) + $question_base;
  return $items;
}

/**
 * Get exam list using exam id and without exam id complete exam list.
 */
function exam_spider_get_exam($exam_id = '') {
  global $user;
  if (is_numeric($exam_id)) {
    $query = db_select("exam_list", "el")
      ->fields("el")
      ->condition('id', $exam_id, '=');
    $query = $query->execute();
    return $query->fetchAssoc();

  }
  else {
    $query = db_select("exam_list", "el")
      ->fields("el")
    $query = $query->execute();
    return $query->fetchAll();
  }
}

/**
 * Get question list using question id and without question id complete exam list.
 */
function exam_spider_get_question($question_id = '') {
  if (is_numeric($question_id)) {
    $query = db_select("exam_questions", "eq")
      ->fields("eq")
      ->condition('id', $question_id, '=');
    $query = $query->execute();
    return $query->fetchAssoc();

  }
  else {
    $query = db_select("exam_questions", "eq")
      ->fields("eq");
    $query = $query->execute();
    return $query->fetchAll();
  }
}
